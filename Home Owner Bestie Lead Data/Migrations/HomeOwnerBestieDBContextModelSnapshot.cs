// <auto-generated />
using System;
using HomeOwnerBestie.LeadData.SQL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeOwnerBestie.LeadData.SQL.Migrations
{
    [DbContext(typeof(HomeOwnerBestieDBContext))]
    partial class HomeOwnerBestieDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HomeOwnerBestie.LeadData.SQL.Models.AppUsers", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnName("UserID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("FirstName")
                        .HasMaxLength(256);

                    b.Property<string>("LastName")
                        .HasMaxLength(256);

                    b.Property<string>("Phone")
                        .HasMaxLength(24);

                    b.HasKey("UserId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("HomeOwnerBestie.LeadData.SQL.Models.RentValuationReports", b =>
                {
                    b.Property<string>("RentValuationRecordId")
                        .HasColumnName("RentValuationRecordID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("AverageMonthlyRent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("HomeOwnerSpecifiedRent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool?>("IsRentEstimateAvailable");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("UserID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("ValuationRentHigh")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ValuationRentLow")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("ValueChangedIn30Days")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("RentValuationRecordId")
                        .HasName("PK_RentValuationData");

                    b.HasIndex("UserId");

                    b.ToTable("RentValuationReports");
                });

            modelBuilder.Entity("HomeOwnerBestie.LeadData.SQL.Models.UserAddresses", b =>
                {
                    b.Property<string>("AddressId")
                        .HasColumnName("AddressID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("City")
                        .HasMaxLength(128);

                    b.Property<string>("County")
                        .HasMaxLength(128);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Street")
                        .HasMaxLength(512);

                    b.Property<string>("UserId")
                        .HasColumnName("UserID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("HomeOwnerBestie.LeadData.SQL.Models.UserIpaddresses", b =>
                {
                    b.Property<string>("IpaddressRecordId")
                        .HasColumnName("IPAddressRecordID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<string>("Ipaddress")
                        .IsRequired()
                        .HasColumnName("IPAddress")
                        .HasMaxLength(24);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("UserID")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("IpaddressRecordId");

                    b.HasIndex("UserId");

                    b.ToTable("UserIPAddresses");
                });

            modelBuilder.Entity("HomeOwnerBestie.LeadData.SQL.Models.RentValuationReports", b =>
                {
                    b.HasOne("HomeOwnerBestie.LeadData.SQL.Models.AppUsers", "User")
                        .WithMany("RentValuationReports")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_RentValuationData_AppUsers");
                });

            modelBuilder.Entity("HomeOwnerBestie.LeadData.SQL.Models.UserAddresses", b =>
                {
                    b.HasOne("HomeOwnerBestie.LeadData.SQL.Models.AppUsers", "User")
                        .WithMany("UserAddresses")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserAddresses_AppUsers");
                });

            modelBuilder.Entity("HomeOwnerBestie.LeadData.SQL.Models.UserIpaddresses", b =>
                {
                    b.HasOne("HomeOwnerBestie.LeadData.SQL.Models.AppUsers", "User")
                        .WithMany("UserIpaddresses")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_UserIPAddresses_AppUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
